<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2017 StreamSets Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_bt1_bpj_r1b">
 <title>Credential Stores</title>
 <shortdesc><ph conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
        pipeline stages communicate with external systems to read and write data. Many of these
        external systems require credentials - user names, passwords, or access keys - to access the
        data. When you configure pipeline stages for these external systems, you define the
        credentials that the stage uses to connect to the system.</shortdesc>
 <conbody>
        <p><indexterm>credential stores<indexterm>Java
                keystore</indexterm></indexterm><indexterm>credential
                    stores<indexterm>using</indexterm></indexterm><indexterm>credentials<indexterm>defining</indexterm></indexterm>If
            you enter credential values directly in stage properties, you expose the credentials to
            any user with access to the pipeline. To access external systems without exposing the
            credentials, define credentials in a credential store and then use the <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
            <xref href="../Expression_Language/CredentialFunctions.dita#concept_yvc_3qs_r1b"
                >credential functions</xref> in the stage properties to retrieve those values. </p>
        <p><ph conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/> has
            a credential store API that uses a Java keystore to securely store credentials in a
            file.</p>
        <p>
            <draft-comment author="alisontaylor">add this text when we add support for another
                system: "API that integrates with different credential store systems, such as a Java
                keystore or even an in-house solution your organization has defined. You can
                configure a Data Collector to use multiple credential stores at the same time. Each
                credential store is identified by a unique ID."</draft-comment>
            <note type="tip">When you define credentials in a credential store instead of directly
                in stage properties, you also make it easier to migrate pipelines to another
                environment. For example, if you migrate multiple pipelines from a development to a
                production environment, you do not need to edit each pipeline to define the correct
                credentials for the production environment. You can simply replace the development
                credentials store with the production version.</note>
        </p>
 </conbody>
</concept>
